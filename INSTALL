#!/bin/bash
#
# INSTALL script for Customizer "old stable"
# This will make installation easier (#141).
#
# DO NOT USE if this script was not downloaded from GitHub!
#
# Copyright 2016 Mubiin Kimura 'clearkimura'
# Distributed under GNU GPL-2.0 license
# This script shall be distributed with source code of Customizer.
#
# REQUIRES: bash, sudo, apt, wget, tar, make, dpkg, coreutils
#
# USAGE: For each STEP, copy and paste commands, then press ENTER in
# the Terminal. Else download and run: chmod +x INSTALL && ./INSTALL
#

# FUNCTIONS FOR ACTION:

function install_req {
echo "*** Install dependencies..."                     ### STEP 1 ###
#####################################################################
sudo apt-get install git build-essential fakeroot make binutils g++ \
python python-dev python-qt4 pyqt4-dev-tools squashfs-tools \
xorriso x11-xserver-utils xserver-xephyr qemu-kvm dpkg-dev \
debhelper qt4-dev-tools qt4-linguist-tools \
--no-install-recommends
#####################################################################
}

function download_src {
echo "*** Download source and extract..."              ### STEP 2 ###
#####################################################################
wget https://github.com/clearkimura/Customizer/archive/master.tar.gz
tar zxvf master.tar.gz
#####################################################################
}

function install_bin {
echo "*** Compile and install via dpkg..."             ### STEP 3 ###
#####################################################################
cd Customizer-master && make deb
cd && sudo dpkg --install customizer*.deb
#####################################################################
}

function uninstall {
echo "*** Purge via dpkg..."                           ### PURGES ###
#####################################################################
sudo dpkg --purge customizer
#####################################################################
echo "*** Matching directories and files for deletion..."
ls -1d ?ustomizer* master.tar.gz*
echo "[!] User consent is required [y to confirm, else will skip]"
rm -I --verbose --recursive ?ustomizer* master.tar.gz*
}

function renew_sh {
echo "[!] This action will rename existing script as *.old file then"
echo "[!]  will download new script from GitHub and make executable"
echo "[!] You just need to run again ./INSTALL later"
echo "Press any key to continue [^C to cancel and exit]" && read -n 1
echo "*** Rename and overwrite existing script..."
mv INSTALL customizer-INSTALL.old
echo "*** Download new INSTALL script..."
wget --quiet $(echo $URLH$URL1)
echo "*** Enable executable bit for new INSTALL script..."
chmod +x INSTALL
}

# FUNCTIONS FOR DISPLAY:

function show_msg {
    if [ "$KEY" != q ]
        then echo "Started INSTALL script"
             echo "This script is compatible for $HINT"
        else echo "Finished now" && sleep 1
    fi
}

function show_menu {
    echo && echo "What is your action?"
    echo " 1: i: New installation"
    echo "    s: Renew INSTALL script"
    echo " 2: r: Download and reinstall package"
    echo " 3: u: Uninstall"
}

# SET VARIABLES:

HINT="Customizer \"old stable\""
KEY="0"
URLH="https://raw.githubusercontent.com/"
URL1="clearkimura/Customizer/master/INSTALL"

# BEGIN SCRIPT:

show_msg
while [ "$KEY" != q ]
do {
    show_menu
    echo -n "Type your choice [q to quit]: "
    read KEY
    case $KEY in
        1|i) install_req && download_src && install_bin && KEY="q" ;;
        2|r) uninstall && download_src && install_bin && KEY="q" ;;
        3|u) uninstall && KEY="q" ;;
        s) renew_sh && KEY="q" ;;
        q) echo "Do nothing"; break ;;
        *) echo "[?] Unknown option" ;;
    esac
}
done
show_msg
